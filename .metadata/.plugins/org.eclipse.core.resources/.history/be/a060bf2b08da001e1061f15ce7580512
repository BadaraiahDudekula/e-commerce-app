package org.jsp.ecommerceapp.service;

import java.util.Optional;

import org.jsp.ecommerceapp.dao.MerchantDao;
import org.jsp.ecommerceapp.dto.ResponseStructure;
import org.jsp.ecommerceapp.model.Merchant;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;

@Service
public class MerchantService {
	@Autowired
	private MerchantDao merchantDao;

	public ResponseEntity<ResponseStructure<Merchant>> saveMerchant(Merchant merchant){
		ResponseStructure<Merchant> rs=new ResponseStructure<>();
		rs.setModel(merchantDao.saveMerchant(merchant));
		rs.setMessage("Merchant Saved");
		rs.setStatusCode(HttpStatus.CREATED.value());
		return new ResponseEntity<ResponseStructure<Merchant>>(rs,HttpStatus.CREATED);
	}

	public ResponseEntity<ResponseStructure<Merchant>> updateMerchant(Merchant merchant){
		Optional<Merchant> m=merchantDao.findById(merchant.getId());
		ResponseStructure<Merchant> rs=new ResponseStructure<>();
		if(m.isPresent()) {
			rs.setModel(merchantDao.saveMerchant(merchant));
			rs.setMessage("Merchant Updated");
			rs.setStatusCode(HttpStatus.ACCEPTED.value());
			return new ResponseEntity<ResponseStructure<Merchant>>(rs,HttpStatus.ACCEPTED);
		}
		return null;
	}
	
	public ResponseEntity<ResponseStructure<Boolean>> deleteMerchant(int id){
		Optional<Merchant> m=merchantDao.findById(id);
		ResponseStructure<Boolean> rs=new ResponseStructure<>();
		if(m.isPresent()) {
			rs.setModel(merchantDao.delete(id));
			rs.setMessage("Merchant Deleted");
			rs.setStatusCode(HttpStatus.OK.value());
			return new ResponseEntity<ResponseStructure<Boolean>>(rs, HttpStatus.OK);
			
		}
		return null ;
	}
	
	
	public ResponseEntity<ResponseStructure<Merchant>> verifyMerchant(String email,String password){
		Optional<Merchant> m=merchantDao.verify(email, password);
		ResponseStructure<Merchant> rs=new ResponseStructure<>();
		if(m.isPresent()) {
			rs.setModel(m.get());
			rs.setMessage("Merchant verified");
			rs.setStatusCode(HttpStatus.OK.value());
			return new ResponseEntity<ResponseStructure<Merchant>>(rs,HttpStatus.ACCEPTED);
		}
		return null;
	}
	


}
